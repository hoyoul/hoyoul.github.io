<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Holy Frege</title>
    <link>https://braindump.frege2godel.me/posts/</link>
    <description>Recent content in Posts on Holy Frege</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 17 Jun 2023 00:00:00 +0900</lastBuildDate><atom:link href="https://braindump.frege2godel.me/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[leetcode] 1672 Richest Customer Wealth</title>
      <link>https://braindump.frege2godel.me/posts/leetcode_1672_richest_customer_wealth/</link>
      <pubDate>Sat, 17 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/leetcode_1672_richest_customer_wealth/</guid>
      <description>문제 링크 You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer</description>
    </item>
    
    <item>
      <title>python_summary6 function</title>
      <link>https://braindump.frege2godel.me/posts/python_summary6_function/</link>
      <pubDate>Sat, 17 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary6_function/</guid>
      <description></description>
    </item>
    
    <item>
      <title>python_summary7 big data and python</title>
      <link>https://braindump.frege2godel.me/posts/python_summary7_big_data_and_python/</link>
      <pubDate>Sat, 17 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary7_big_data_and_python/</guid>
      <description>대용량 data의 처리 대용량 data의 처리에서 대용량 data는 string이나 array, list 같은 data collection에 있는 data를 말한다. 처리는 검색</description>
    </item>
    
    <item>
      <title>[github] multi account github problem</title>
      <link>https://braindump.frege2godel.me/posts/github_multi_account_github_problem/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/github_multi_account_github_problem/</guid>
      <description>multi account github problem 맥에서 여러개의 github을 사용할때 git push 403에러가 나는 경우가 있다. 간단한 해결법 key chain에서 login type이 github을 삭제한다.</description>
    </item>
    
    <item>
      <title>[website] about my brain blog and homepage</title>
      <link>https://braindump.frege2godel.me/posts/website_about_my_brain_blog_and_homepage/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/website_about_my_brain_blog_and_homepage/</guid>
      <description>My homepage 참조: from here (만들당시 기록한 note) 주소: https://frege2godel.me/ github id: holy2frege github repo(dev,publish): main-blog,holy2frege.github.io 사용법 clone local에 repo가 clone되어 있지 않다면 clone부터 한다. Figure 1: main page article 수정</description>
    </item>
    
    <item>
      <title>[website] make main homepage</title>
      <link>https://braindump.frege2godel.me/posts/website_make_main_homepage/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/website_make_main_homepage/</guid>
      <description>make blog 시작 nmain blog를 만들기로 했다. holy2frege라는 github id를 만들었다. 2개의 repo를 만들었다. main-blog라는 repo와 hol</description>
    </item>
    
    <item>
      <title>[emacs] org to ipython notebook</title>
      <link>https://braindump.frege2godel.me/posts/emacs_org_to_ipython_notebook/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/emacs_org_to_ipython_notebook/</guid>
      <description>org to .ipynb emacs에서 ipython notebook을 직접 다루려면 ein package 를 사용한다. 즉 notebook을 다운로드 받고 notebook형식을 유지한채 편집하고 다</description>
    </item>
    
    <item>
      <title>[kaggle-courses-intro] Arithmetic and Variable</title>
      <link>https://braindump.frege2godel.me/posts/kaggle_courses_intro_arithmetic_and_variable/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/kaggle_courses_intro_arithmetic_and_variable/</guid>
      <description>Arithemetic and Variables Printing 가장 중요한 명령어라고 한다. print(&amp;#34;hello world&amp;#34;) hello world Arithemetic print(1+2) print(9-5) 3 4 Comments Variables</description>
    </item>
    
    <item>
      <title>[kaggle-courses-python] hello python</title>
      <link>https://braindump.frege2godel.me/posts/kaggle_courses_python_hello_python/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/kaggle_courses_python_hello_python/</guid>
      <description>Hello python </description>
    </item>
    
    <item>
      <title>[kaggle] beginning</title>
      <link>https://braindump.frege2godel.me/posts/kaggle_beginning/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/kaggle_beginning/</guid>
      <description>kaggle kaggle은 초보자를 위한 guide를 제공한다. Learn이란 section이 있는데 기본중에 기본을 다룬다. 그것을 먼저 알아볼 필요가 있고, 그것</description>
    </item>
    
    <item>
      <title>[leetcode] beginning</title>
      <link>https://braindump.frege2godel.me/posts/leetcode_beginning/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/leetcode_beginning/</guid>
      <description>leet code leet code는 학습할 수있는 chapter를 제공한다. explorer -&amp;gt; learn은 기초중의 기초다. Figure 1: leetcode explorer Figure 2: leetcode learn The Leet Code Beginner&amp;rsquo;s Guide 1st problem (1480. Running Sum of 1D Array) 2nd_problem (1672. Richest Customer Wealth)</description>
    </item>
    
    <item>
      <title>[leetcode] 1480 running sum of 1d array</title>
      <link>https://braindump.frege2godel.me/posts/leetcode_1480_running_sum_of_1d_array/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/leetcode_1480_running_sum_of_1d_array/</guid>
      <description>문제 위치 여기 문제 Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]). Return the running sum of nums. example1 Input: nums = [1,2,3,4] Output: [1,3,6,10] Explanation: Running sum is obtained as follows: [1, 1+2, 1+2+3, 1+2+3+4]. example2 Input:</description>
    </item>
    
    <item>
      <title>[linear algebra-1] linear algebra introduction</title>
      <link>https://braindump.frege2godel.me/posts/linear_algebra_1_linear_algebra_introduction/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/linear_algebra_1_linear_algebra_introduction/</guid>
      <description>linear algebra에 대한 생각 인과 관계(causation)와 상관관계(correlation) 어떤 변수와 다른 어떤 변수와의 연관성이 있을때 rela</description>
    </item>
    
    <item>
      <title>[linear algebra-2] linear independence</title>
      <link>https://braindump.frege2godel.me/posts/linear_algebra_2_linear_independence/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/linear_algebra_2_linear_independence/</guid>
      <description>summary of lecture 14 and about lecture 15 lecture 14에서 배운것은 다음과 같다. 우리는 주어진 data로부터 machine을 만든다. 즉 linear system이라는 연립방정식의 형태로 만드</description>
    </item>
    
    <item>
      <title>python_summary3 about class</title>
      <link>https://braindump.frege2godel.me/posts/python_summary3_about_class/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary3_about_class/</guid>
      <description>OOP programming class 기본 class 선언 예시 example class Courier(object): # (object)는 생략가능 NATIONALITY = &amp;#39;KOR&amp;#39; # 클래스 속성 def __init__(self, name: str, address: str): # 생성자 self.name = name # attribute 초기화 self.address = address elf.parcels = [] def assign(self, parcel: str) -&amp;gt; None: self.parcels.append(parcel) def deliver(self) -&amp;gt;</description>
    </item>
    
    <item>
      <title>python_summary5 loop</title>
      <link>https://braindump.frege2godel.me/posts/python_summary5_loop/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary5_loop/</guid>
      <description>Condition &amp;amp; Loop 조건문은 if else, 반복문은 while-for 들여 쓰기: space 4칸, tab을 써도 된다. Conditional Statement if문 사용법1 - if,elif,else 사용법 if를 사용해서 원하는 조건을 만족하면 수행하게 한다.</description>
    </item>
    
    <item>
      <title>python_summary0-About Python</title>
      <link>https://braindump.frege2godel.me/posts/python_summary0_about_python/</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary0_about_python/</guid>
      <description>programming이란 절차지향 언어 &amp;amp; 함수형언어 초창기 programming은 computer가 가진 계산능력을 사용하는데 focus를 두었다</description>
    </item>
    
    <item>
      <title>sop idea1</title>
      <link>https://braindump.frege2godel.me/posts/sop_idea1/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/sop_idea1/</guid>
      <description>답이 1개가 아닌 최적화 문제 해결에 A.I의 사용이 흥미로웠다. discrete한 small data에 대해선 dp를 사용했지만, neural network은 거의 cont</description>
    </item>
    
    <item>
      <title>[emacs] org-babel -python</title>
      <link>https://braindump.frege2godel.me/posts/emacs_org_babel_python/</link>
      <pubDate>Sat, 10 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/emacs_org_babel_python/</guid>
      <description>setting emacs init file (org-babel-do-load-languages &amp;#39;org-babel-load-languages &amp;#39;((python . t))) default usage 다음과 같이 src code block을 만든다. 코드를 입력한다. #+BEGIN_SRC python a = 3 #+END_SRC 그리고 C-c c 를 눌러서 실행한다. 그러면 None이라는 결과가 나</description>
    </item>
    
    <item>
      <title>[emacs] python lsp setting</title>
      <link>https://braindump.frege2godel.me/posts/emacs_python_lsp_setting/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/emacs_python_lsp_setting/</guid>
      <description>DOING pyright 설정 create env $ conda create -n pyright python=3.11 RET activate env $ conda activate pyright install pyright on pyright env $ conda install -c conda-forge pyright RET</description>
    </item>
    
    <item>
      <title>python_summary2-assignment and variables</title>
      <link>https://braindump.frege2godel.me/posts/python_summary2_assignment_and_variables/</link>
      <pubDate>Thu, 08 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary2_assignment_and_variables/</guid>
      <description>variable &amp;amp; operator 변수 개념 python에서의 변수를 lisp에선 symbol이라고 부르고, 일상생활에서는 name이라고 말한다. 일상생활에서 name은 중요하</description>
    </item>
    
    <item>
      <title>[emacs] anaconda settings</title>
      <link>https://braindump.frege2godel.me/posts/emacs_anaconda_settings/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/emacs_anaconda_settings/</guid>
      <description>system 설정 emacs에서 anaconda를 사용하기 위해선, mac에 anaconda를 설치한다. 여기(from here) 에서 다운받아서 설치하면 된다. virtual environment 개</description>
    </item>
    
    <item>
      <title>hugo korean encoding problem</title>
      <link>https://braindump.frege2godel.me/posts/hugo_korean_encoding_problem/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/hugo_korean_encoding_problem/</guid>
      <description>org-roam과 한글 org-roam에서 title을 한글로 하면 한글명의 org파일이 만들어지고, ox-hugo를 실행하면 contents/p</description>
    </item>
    
    <item>
      <title>python_summary1-import and module</title>
      <link>https://braindump.frege2godel.me/posts/python_summary1/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary1/</guid>
      <description>import python code의 첫줄에 가장 많이 볼 수 있는 것은 import문이다. 어떤 code를 보더라도 첫줄에 아래와 같은 import로 시작하는 문장을 볼 수 있다. 형태</description>
    </item>
    
    <item>
      <title>test_page1</title>
      <link>https://braindump.frege2godel.me/posts/test_page1/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/test_page1/</guid>
      <description>test this is test</description>
    </item>
    
    <item>
      <title>[emacs] jupyter notebook settings</title>
      <link>https://braindump.frege2godel.me/posts/emacs_jupyter_noteboo_settings/</link>
      <pubDate>Tue, 06 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/emacs_jupyter_noteboo_settings/</guid>
      <description>python, ipython, jupyter notebook, google colab이란? python의 동작방식 python은 interpreter와 compiler 두가지 모드가 있다. interpreter는 REPL(Read Evaluate Print Lo</description>
    </item>
    
    <item>
      <title>daily영어(1)-don&#39;t pet my puppy</title>
      <link>https://braindump.frege2godel.me/posts/english1/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/english1/</guid>
      <description>Dear Annie audio-file 1 내 강아지는 비글 라브라도 리트리버의 mix입니다. 1살이며, 강아지가 하는 모든 것을 합니다. My puppy, a beagle/Labrador mix, is 1 year old and does everything puppies do. 2 그녀는 매력적입니다</description>
    </item>
    
    <item>
      <title>folding test1</title>
      <link>https://braindump.frege2godel.me/posts/folding_test/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/folding_test/</guid>
      <description>folding test 아래를 누르세요. folding test2</description>
    </item>
    
    <item>
      <title>folding test2</title>
      <link>https://braindump.frege2godel.me/posts/folding_test2/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/folding_test2/</guid>
      <description>folding test 아래를 누르세요. folding test1</description>
    </item>
    
    <item>
      <title>lecture10-String</title>
      <link>https://braindump.frege2godel.me/posts/lecture10-string/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture10-string/</guid>
      <description>String의 기본 자연어 처리에 있어서 문자열은 매우 중요하다. regular expression이 매우 많이 쓰인다. string의 특징 immutable 이다. 표기법: &amp;lsquo;&amp;rsquo;&amp;rsquo;, &amp;ldquo;&amp;rdquo;&amp;quot;, &amp;ldquo;, &amp;</description>
    </item>
    
    <item>
      <title>lecture11-IO</title>
      <link>https://braindump.frege2godel.me/posts/lecture11-io/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture11-io/</guid>
      <description>standard Input/output 개요 input과 output의 의미 program이 하는 일은 대부분 변수나 객체 생성, for-loop, if로 이루어져 있다. 변수나 객체를 생성하는 것은, cpu와</description>
    </item>
    
    <item>
      <title>lecture12-setting-exception-logging</title>
      <link>https://braindump.frege2godel.me/posts/lecture12-setting-exception-logging/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture12-setting-exception-logging/</guid>
      <description>Command Line Argument 개요 python을 실행할때, gpu개수, epoch같은 변수들을 program이 동작할때 cmd line interface에서 argument에서 전</description>
    </item>
    
    <item>
      <title>lecture13-web</title>
      <link>https://braindump.frege2godel.me/posts/lecture13-web/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture13-web/</guid>
      <description>web crawling web crawling 개요 우리가 browser로 보는 화면은 html문서를 formatting한 것이다. web 문서인 html문서를 browser가 우리 컴퓨터에 d</description>
    </item>
    
    <item>
      <title>lecture3 data structures</title>
      <link>https://braindump.frege2godel.me/posts/lecture3_data-structure/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture3_data-structure/</guid>
      <description>Data Structure List list의 특징 대괄호로 만들어진다. 아무 type의 객체를 가리킬수 있다. list가 con cell로 이루어져있고 car, cdr이 모두 pointer라서</description>
    </item>
    
    <item>
      <title>lecture4_condition-and-loop</title>
      <link>https://braindump.frege2godel.me/posts/lecture4_condition-and-loop/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture4_condition-and-loop/</guid>
      <description>Condition &amp;amp; Loop 조건문은 if else, 반복문은 while-for 들여 쓰기: space 4칸, tab을 써도 된다. Conditional Statement if문 사용법1 - if,elif,else 사용법 if를 사용해서 원하는 조건을 만족하면 수행하게 한다.</description>
    </item>
    
    <item>
      <title>lecture5_function</title>
      <link>https://braindump.frege2godel.me/posts/lecture5_function/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture5_function/</guid>
      <description>function python에서 모든것은 객체다. function은 method이면서 객체다. function이 method인건, 내부인자로 self를 넣을 수</description>
    </item>
    
    <item>
      <title>lecture6-pythonic programming</title>
      <link>https://braindump.frege2godel.me/posts/lecture6-pythonic-programming/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture6-pythonic-programming/</guid>
      <description>Pythonic Programming for-in-iterator-loop, iterator,generator in predicate &amp;lsquo;in&amp;rsquo; keywords를 사용하는 건 2가지가 있다. predicate으로 in과 for-in-loop에서 사용이 있다. 내가 보기에 &amp;lsq</description>
    </item>
    
    <item>
      <title>lecture7_Object-Oriented-Programming</title>
      <link>https://braindump.frege2godel.me/posts/lecture7_object-oriented-programming/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture7_object-oriented-programming/</guid>
      <description>OOP programming class 기본 class 선언 예시 example class Courier(object): # (object)는 생략가능 NATIONALITY = &amp;#39;KOR&amp;#39; # 클래스 속성 def __init__(self, name: str, address: str): # 생성자 self.name = name # attribute 초기화 self.address = address elf.parcels = [] def assign(self, parcel: str) -&amp;gt; None: self.parcels.append(parcel) def deliver(self) -&amp;gt;</description>
    </item>
    
    <item>
      <title>lecture8-module-and-package</title>
      <link>https://braindump.frege2godel.me/posts/lecture8-module-and-package/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture8-module-and-package/</guid>
      <description>module import 사용법 module은 .py로 끝나는 파일 한개를 의미한다. python으로 작성된 모든 file들은 python module이라고 부를 수 있다. import</description>
    </item>
    
    <item>
      <title>lecture9-Advanced-Data-Structure</title>
      <link>https://braindump.frege2godel.me/posts/lecture9-advanced-data-structure/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture9-advanced-data-structure/</guid>
      <description>Stack a = [1,10] a.append(4) a.append(20) print(a.pop()) print(a.pop()) stack은 FILO(First In First Out) python에서 stack은 list를 사용하면 된다. list에서 제공하는 append와 pop을 사용한다.</description>
    </item>
    
    <item>
      <title>web scraping1</title>
      <link>https://braindump.frege2godel.me/posts/webcrawler1/</link>
      <pubDate>Mon, 05 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/webcrawler1/</guid>
      <description>개요 Figure 1: web scraping book 집에 돌아다니는 읽어보지 않은 책이 있다. 라이언 미첼이라는 사람이 쓴 건데, web scraping 그리고 web crawling에 관한 책이다. 한번 읽어 보고 정리하</description>
    </item>
    
    <item>
      <title>lecture2_variable_and_operator</title>
      <link>https://braindump.frege2godel.me/posts/lecture2_variable_and_operator/</link>
      <pubDate>Sun, 04 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/lecture2_variable_and_operator/</guid>
      <description>[lecture2] variable &amp;amp; operator 변수와 assignment 변수는 lisp에선 symbol이라고 부르고, 모든 symbol은 동일한 형태의 structure를 가졌다. symbol의 이름은 u</description>
    </item>
    
    <item>
      <title>linear_algebra1</title>
      <link>https://braindump.frege2godel.me/posts/linear_algebra1/</link>
      <pubDate>Sun, 04 Jun 2023 00:00:00 +0900</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/linear_algebra1/</guid>
      <description>linear algebra에 대한 생각 인과 관계(causation)와 상관관계(correlation) 어떤 변수와 다른 어떤 변수와의 연관성이 있을때 rela</description>
    </item>
    
    <item>
      <title>Example of org to ipynb</title>
      <link>https://braindump.frege2godel.me/posts/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/example/</guid>
      <description>Introduction I wrote this module to allow me to write lecture notes in org-mode, but export them to ipython notebooks for my students. It also makes it easier to share my work with people who don&amp;rsquo;t use org-mode (although it is a one-way conversion of org to ipynb).
To use this, you have to require the ox-ipynb library. Then you can export this file with the key sequence C-c C-e n o to create the ipynb and open it.</description>
    </item>
    
    <item>
      <title>python_summary4_data structures</title>
      <link>https://braindump.frege2godel.me/posts/python_summary4_data_structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://braindump.frege2godel.me/posts/python_summary4_data_structures/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
